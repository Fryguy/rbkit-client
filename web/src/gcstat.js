// Generated by CoffeeScript 1.7.1
this.GcStat = (function() {
  var placeHolderSeries;

  placeHolderSeries = function() {
    var num, _i, _results;
    _results = [];
    for (num = _i = -9; _i <= 0; num = ++_i) {
      _results.push([(new Date()).getTime() + num * 1000, 0]);
    }
    return _results;
  };

  function GcStat() {
    this.gcStartTime = null;
    this.gcEndTime = null;
    this.lastGcDuration = null;
  }

  GcStat.prototype.gcStarted = function(gcEvent) {
    console.info("Received start " + gcEvent.timestamp);
    return this.gcStartTime = gcEvent.timestamp;
  };

  GcStat.prototype.gcStopped = function(gcEvent) {
    this.gcEndTime = gcEvent.timestamp;
    this.lastGcDuration = this.gcEndTime - this.gcStartTime;
    return console.info("stop is " + gcEvent.timestamp + " and GC duration is " + this.lastGcDuration);
  };

  GcStat.prototype.updateChart = function() {
    var currentTime;
    currentTime = (new Date()).getTime();
    if (this.lastGcDuration != null) {
      return this.chart.series[0].addPoint([currentTime, this.lastGcDuration], true, true);
    } else {
      return this.chart.series[0].addPoint([currentTime, 0], true, true);
    }
  };

  GcStat.prototype.plotChart = function() {
    return this.chart = $("#gc-container").highcharts({
      chart: {
        type: 'spline'
      },
      title: {
        text: null
      },
      xAxis: {
        type: 'datetime',
        tickPixelInterval: 150,
        title: {
          enabled: false
        }
      },
      yAxis: {
        min: 0,
        title: {
          text: 'GC duration (msec)'
        },
        plotLines: [
          {
            value: 0,
            width: 1,
            color: '#808080'
          }
        ]
      },
      series: [
        {
          name: 'GC duration',
          data: placeHolderSeries()
        }
      ]
    }).highcharts();
  };

  return GcStat;

})();
